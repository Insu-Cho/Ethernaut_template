// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "forge-std/Script.sol";
import "../../src/exploit/ExploitDenialFactory/ExploitDenialFactory.sol";
import "../../src/levels/DenialFactory.sol";

contract DenialFactoryExploit is Script {
    function run() external {
        // 프라이빗 키를 정수형으로 가져오기
        uint256 privateKey = vm.envUint("PRIVATE_KEY");
        address attacker = vm.addr(privateKey); // 프라이빗 키에 해당하는 주소
        address instance = vm.envAddress("INSTANCE_ADDRESS"); // 공격 대상 주소

        vm.startBroadcast(privateKey); // 프라이빗 키로 브로드캐스트 시작

        // 컨트랙트 인터페이스 설정
        DenialFactory DenialFactoryContract = DenialFactory(payable(instance));

        // Exploit 컨트랙트 배포 (필요 시)
        // ExploitDenialFactory exploit = new ExploitDenialFactory(instance);

        // 공격/풀이 로직 작성 (예: exploit.someFunction(...);)

        vm.stopBroadcast();
    }
}
